{"variants":[{"paths":["\/documentation\/casepaths\/extract(_:)-5ivuf"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"extract","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"embed","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> (","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"inlineContent":[{"text":"A function that can attempt to extract associated values from an enum.","type":"text"}],"type":"paragraph"}]},{"parameters":[{"name":"embed","content":[{"type":"paragraph","inlineContent":[{"text":"An enum case initializer.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"Use this function to create new transform functions to pass to higher-order methods like"},{"type":"text","text":" "},{"type":"codeVoice","code":"compactMap"},{"type":"text","text":":"}],"type":"paragraph"},{"code":["[Result<Int, Error>.success(42), .failure(MyError()]","  .compactMap(extract(Result.success))","\/\/ [42]"],"type":"codeListing","syntax":"swift"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"This function is only intended to be used with enum case initializers. Its behavior is","type":"text"},{"text":" ","type":"text"},{"text":"otherwise undefined.","type":"text"}]}],"style":"note"}]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/extract(_:)-5ivuf","interfaceLanguage":"swift"},"sections":[],"metadata":{"title":"extract(_:)","platforms":[],"externalID":"s:9CasePaths7extractyq_SgxSgcADq_cr0_lF","modules":[{"name":"CasePaths"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"extract"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?) -> ("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"roleHeading":"Function","symbolKind":"func","role":"symbol"},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use case path literal syntax (e.g., '\/Root.caseName')"}]}],"abstract":[{"text":"Returns a function that can attempt to extract associated values from the given enum case","type":"text"},{"text":" ","type":"text"},{"text":"initializer.","type":"text"}],"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/CasePaths/extract(_:)-5ivuf":{"deprecated":true,"abstract":[{"text":"Returns a function that can attempt to extract associated values from the given enum case","type":"text"},{"text":" ","type":"text"},{"text":"initializer.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"extract"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> (","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"extract(_:)","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/extract(_:)-5ivuf","url":"\/documentation\/casepaths\/extract(_:)-5ivuf","role":"symbol"},"doc://co.pointfree.Parsing/documentation/CasePaths":{"url":"\/documentation\/casepaths","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths","title":"CasePaths","type":"topic","kind":"symbol"}}}