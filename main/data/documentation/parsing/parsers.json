{"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CompactMap","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FlatMap","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Identity","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConstant","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConversion","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OverridePrinting","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PipeEnd","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Print","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ReplaceError","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/TryPrint","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Always","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/AnyParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/End","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Fail","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/First","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Lazy","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Many","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Newline","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Prefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixThrough","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixUpTo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Rest","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Skip","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/StartsWith","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Whitespace"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional"]}],"metadata":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"role":"symbol","symbolKind":"enum","title":"Parsers","externalID":"s:7Parsing7ParsersO","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"modules":[{"name":"Parsing"}],"roleHeading":"Enumeration"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"},"sections":[],"variants":[{"paths":["\/documentation\/parsing\/parsers"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The various operators defined as extensions on "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","isActive":true},{"type":"text","text":" implement their functionality as"},{"type":"text","text":" "},{"type":"text","text":"classes or structures that extend this enumeration. For example, the "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)-4hsj5","isActive":true},{"type":"text","text":" "},{"type":"text","text":"operator returns a "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","isActive":true},{"type":"text","text":" parser."}]}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Print":{"url":"\/documentation\/parsing\/parsers\/print","title":"Parsers.Print","role":"symbol","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Print","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Print"}],"navigatorTitle":[{"kind":"identifier","text":"Print"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/End":{"type":"topic","role":"symbol","url":"\/documentation\/parsing\/parsers\/end","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/End","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"End"}],"navigatorTitle":[{"kind":"identifier","text":"End"}],"title":"Parsers.End","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FloatParser":{"abstract":[{"type":"text","text":"A parser that consumes a floating-point number from the beginning of a collection of UTF-8"},{"type":"text","text":" "},{"type":"text","text":"code units."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"FloatParser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser","navigatorTitle":[{"text":"FloatParser","kind":"identifier"}],"type":"topic","title":"Parsers.FloatParser","url":"\/documentation\/parsing\/parsers\/floatparser","role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pipe":{"url":"\/documentation\/parsing\/parsers\/pipe","title":"Parsers.Pipe","role":"symbol","abstract":[{"type":"text","text":"A parser that runs this parser, pipes its output into the given parser, and returns the output"},{"type":"text","text":" "},{"type":"text","text":"of the given parser."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pipe"}],"navigatorTitle":[{"kind":"identifier","text":"Pipe"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/First":{"type":"topic","role":"symbol","url":"\/documentation\/parsing\/parsers\/first","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/First","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"First"}],"navigatorTitle":[{"kind":"identifier","text":"First"}],"title":"Parsers.First","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pullback":{"abstract":[{"text":"Transforms the ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" of a downstream parser.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Pullback","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/pullback","navigatorTitle":[{"text":"Pullback","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","title":"Parsers.Pullback","type":"topic","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/BoolParser":{"abstract":[{"type":"text","text":"A parser that consumes a Boolean value from the beginning of a collection of UTF-8 code units."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser","title":"Parsers.BoolParser","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BoolParser","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/boolparser","type":"topic","role":"symbol","navigatorTitle":[{"text":"BoolParser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/MapConversion":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConversion","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MapConversion"}],"navigatorTitle":[{"kind":"identifier","text":"MapConversion"}],"type":"topic","title":"Parsers.MapConversion","url":"\/documentation\/parsing\/parsers\/mapconversion","kind":"symbol","abstract":[{"type":"text","text":"A parser that transforms the output of another parser with a given conversion."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Filter":{"url":"\/documentation\/parsing\/parsers\/filter","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Filter"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Filter"}],"title":"Parsers.Filter","kind":"symbol","abstract":[{"type":"text","text":"A parser that filters the output of an upstream parser when it does not satisfy a predicate."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Conditional":{"role":"symbol","kind":"symbol","title":"Parsers.Conditional","abstract":[{"type":"text","text":"A parser that can parse output from two types of parsers."}],"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conditional"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional","url":"\/documentation\/parsing\/parsers\/conditional","navigatorTitle":[{"kind":"identifier","text":"Conditional"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Map":{"url":"\/documentation\/parsing\/parsers\/map","type":"topic","kind":"symbol","title":"Parsers.Map","navigatorTitle":[{"kind":"identifier","text":"Map"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Map"}],"abstract":[{"text":"A parser that transforms the output of another parser with a given closure.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OverridePrinting":{"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OverridePrinting","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A parser-printer that parses with the given parser and prints with the given parser-printer."}],"title":"Parsers.OverridePrinting","navigatorTitle":[{"text":"OverridePrinting","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/overrideprinting","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OverridePrinting"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/AnyParser":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"}],"navigatorTitle":[{"kind":"identifier","text":"AnyParser"}],"title":"Parsers.AnyParser","type":"topic","url":"\/documentation\/parsing\/parsers\/anyparser","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/AnyParser","kind":"symbol","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser":{"abstract":[{"text":"A parser that consumes an integer (with an optional leading ","type":"text"},{"type":"codeVoice","code":"+"},{"text":" or ","type":"text"},{"code":"-","type":"codeVoice"},{"text":" sign for signed integer","type":"text"},{"text":" ","type":"text"},{"text":"types) from the beginning of a collection of UTF8 code units.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","title":"Parsers.IntParser","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntParser"}],"url":"\/documentation\/parsing\/parsers\/intparser","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"IntParser"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Many":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Many"}],"navigatorTitle":[{"kind":"identifier","text":"Many"}],"title":"Parsers.Many","type":"topic","url":"\/documentation\/parsing\/parsers\/many","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Many","kind":"symbol","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/TryPrint":{"url":"\/documentation\/parsing\/parsers\/tryprint","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"TryPrint","kind":"identifier"}],"type":"topic","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TryPrint","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/TryPrint","title":"Parsers.TryPrint"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/StartsWith":{"abstract":[],"url":"\/documentation\/parsing\/parsers\/startswith","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/StartsWith","title":"Parsers.StartsWith","kind":"symbol","type":"topic","navigatorTitle":[{"text":"StartsWith","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StartsWith","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Fail":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Fail"}],"navigatorTitle":[{"kind":"identifier","text":"Fail"}],"title":"Parsers.Fail","type":"topic","url":"\/documentation\/parsing\/parsers\/fail","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Fail","kind":"symbol","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","type":"topic","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Skip":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Skip"}],"navigatorTitle":[{"kind":"identifier","text":"Skip"}],"title":"Parsers.Skip","type":"topic","url":"\/documentation\/parsing\/parsers\/skip","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Skip","kind":"symbol","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOfMany":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany","title":"Parsers.OneOfMany","url":"\/documentation\/parsing\/parsers\/oneofmany","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOfMany","kind":"identifier"}],"navigatorTitle":[{"text":"OneOfMany","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers till one succeeds."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/MapConstant":{"navigatorTitle":[{"kind":"identifier","text":"MapConstant"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MapConstant"}],"kind":"symbol","title":"Parsers.MapConstant","url":"\/documentation\/parsing\/parsers\/mapconstant","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConstant","role":"symbol","abstract":[{"text":"A parser that replaces another parser’s ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" output with some new output.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/PrefixUpTo":{"title":"Parsers.PrefixUpTo","kind":"symbol","type":"topic","role":"symbol","abstract":[],"navigatorTitle":[{"text":"PrefixUpTo","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/prefixupto","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixUpTo","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixUpTo"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Stream":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Stream"}],"navigatorTitle":[{"kind":"identifier","text":"Stream"}],"title":"Parsers.Stream","type":"topic","url":"\/documentation\/parsing\/parsers\/stream","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","kind":"symbol","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Always":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Always","kind":"identifier"}],"navigatorTitle":[{"text":"Always","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Always","type":"topic","title":"Parsers.Always","abstract":[],"role":"symbol","url":"\/documentation\/parsing\/parsers\/always","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Identity":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Identity","title":"Parsers.Identity","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Identity"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Identity"}],"role":"symbol","url":"\/documentation\/parsing\/parsers\/identity"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Newline":{"abstract":[],"title":"Parsers.Newline","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Newline"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Newline","url":"\/documentation\/parsing\/parsers\/newline","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Newline"}],"deprecated":true},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CompactMap":{"title":"Parsers.CompactMap","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CompactMap","navigatorTitle":[{"kind":"identifier","text":"CompactMap"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CompactMap"}],"url":"\/documentation\/parsing\/parsers\/compactmap","abstract":[{"type":"text","text":"A parser that outputs the non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" result of calling the given transformation with the output"},{"type":"text","text":" "},{"type":"text","text":"of its upstream parser."}],"kind":"symbol","type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FlatMap":{"title":"Parsers.FlatMap","url":"\/documentation\/parsing\/parsers\/flatmap","kind":"symbol","abstract":[{"type":"text","text":"A parser that transforms the output of another parser into a new parser."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FlatMap","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatMap"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlatMap"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Whitespace":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Whitespace","kind":"identifier"}],"navigatorTitle":[{"text":"Whitespace","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Whitespace","type":"topic","title":"Parsers.Whitespace","abstract":[],"role":"symbol","url":"\/documentation\/parsing\/parsers\/whitespace","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Lazy":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Lazy","kind":"identifier"}],"navigatorTitle":[{"text":"Lazy","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Lazy","type":"topic","title":"Parsers.Lazy","abstract":[],"role":"symbol","url":"\/documentation\/parsing\/parsers\/lazy","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/PipeEnd":{"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PipeEnd","title":"Parsers.PipeEnd","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PipeEnd","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/pipeend","type":"topic","role":"symbol","navigatorTitle":[{"text":"PipeEnd","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UUIDParser":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser","abstract":[{"type":"text","text":"A parser that consumes a UUID from the beginning of a collection of UTF8 code units."}],"title":"Parsers.UUIDParser","url":"\/documentation\/parsing\/parsers\/uuidparser","role":"symbol","navigatorTitle":[{"text":"UUIDParser","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UUIDParser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Prefix":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Prefix","type":"topic","title":"Parsers.Prefix","abstract":[],"role":"symbol","url":"\/documentation\/parsing\/parsers\/prefix","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalVoid":{"navigatorTitle":[{"kind":"identifier","text":"OptionalVoid"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalVoid"}],"type":"topic","title":"Parsers.OptionalVoid","url":"\/documentation\/parsing\/parsers\/optionalvoid","abstract":[{"type":"text","text":"A parser that attempts to run a given void parser, succeeding with void."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/map(_:)-4hsj5":{"title":"map(_:)","url":"\/documentation\/parsing\/parser\/map(_:)-4hsj5","kind":"symbol","abstract":[{"type":"text","text":"Returns a parser that transforms the output of this parser with a given closure."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)-4hsj5","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO3MapV","text":"Map"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"url":"\/documentation\/parsing\/parsers","type":"topic","kind":"symbol","title":"Parsers","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ReplaceError":{"abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"url":"\/documentation\/parsing\/parsers\/replaceerror","navigatorTitle":[{"text":"ReplaceError","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ReplaceError","role":"symbol","title":"Parsers.ReplaceError","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReplaceError","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Rest":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Rest","kind":"identifier"}],"navigatorTitle":[{"text":"Rest","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Rest","type":"topic","title":"Parsers.Rest","abstract":[],"role":"symbol","url":"\/documentation\/parsing\/parsers\/rest","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/PrefixThrough":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixThrough","kind":"identifier"}],"navigatorTitle":[{"text":"PrefixThrough","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixThrough","type":"topic","title":"Parsers.PrefixThrough","abstract":[],"role":"symbol","url":"\/documentation\/parsing\/parsers\/prefixthrough","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol","title":"Parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CaseIterableRawRepresentableParser":{"title":"Parsers.CaseIterableRawRepresentableParser","type":"topic","role":"symbol","url":"\/documentation\/parsing\/parsers\/caseiterablerawrepresentableparser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CaseIterableRawRepresentableParser","kind":"identifier"}],"abstract":[],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CaseIterableRawRepresentableParser"}]}}}