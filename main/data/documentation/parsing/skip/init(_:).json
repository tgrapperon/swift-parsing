{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"build"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":")"}]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/parsing\/skip\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","metadata":{"role":"symbol","roleHeading":"Initializer","externalID":"s:7Parsing4SkipVyACyxGxyXEcfc","symbolKind":"init","modules":[{"name":"Parsing"}],"title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":")"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip\/init(_:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol","title":"Parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","type":"topic","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Skip":{"abstract":[{"type":"text","text":"A parser that discards the output of another parser."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","title":"Skip","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Skip"}],"url":"\/documentation\/parsing\/skip","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Skip"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Skip/init(_:)":{"url":"\/documentation\/parsing\/skip\/init(_:)","title":"init(_:)","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip\/init(_:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":")"}],"type":"topic","role":"symbol"}}}