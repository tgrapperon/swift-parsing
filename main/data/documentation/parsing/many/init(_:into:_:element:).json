{"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:_:element:)","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many"]]},"metadata":{"role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":", "},{"code":"Separator","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"type":"text","text":", "},{"code":"Terminator","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Printability","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Never","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"extendedModule":"Parsing","roleHeading":"Initializer","title":"init(_:into:_:element:)","externalID":"s:7Parsing4ManyVA2A6AlwaysVy5InputQzytGRs0_AHRs1_s5NeverORs2_rlE_4into_7elementACyxq_A2hJGqd___q_yq_z_6OutputQztKcxyXEtcAA13CountingRangeRd__lufc","symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")","kind":"text"}],"modules":[{"name":"Parsing"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":" "},{"kind":"internalParam","text":"initialResult"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"updateAccumulatingResult"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing13CountingRangeP","text":"CountingRange","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CountingRange"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"length","content":[{"inlineContent":[{"text":"A bounds that represents the minimum number of times to run this parser and","type":"text"},{"text":" ","type":"text"},{"text":"consider parsing to be successful, and maximum number of times to run this parser before","type":"text"},{"text":" ","type":"text"},{"text":"returning the output.","type":"text"}],"type":"paragraph"}]},{"name":"initialResult","content":[{"inlineContent":[{"type":"text","text":"The value to use as the initial accumulating value."}],"type":"paragraph"}]},{"name":"updateAccumulatingResult","content":[{"inlineContent":[{"type":"text","text":"A closure that updates the accumulating result with each output"},{"type":"text","text":" "},{"type":"text","text":"of the element parser."}],"type":"paragraph"}]},{"name":"element","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A parser to run multiple times to accumulate into a result."}]}]}],"kind":"parameters"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/many\/init(_:into:_:element:)"]}],"sections":[],"abstract":[{"type":"text","text":"Initializes a parser that attempts to run the given parser many times, accumulating the"},{"type":"text","text":" "},{"type":"text","text":"outputs into a result."}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Many":{"role":"symbol","title":"Many","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","kind":"symbol","navigatorTitle":[{"text":"Many","kind":"identifier"}],"url":"\/documentation\/parsing\/many","abstract":[{"type":"text","text":"A parser that attempts to run another parser as many times as specified, accumulating the result"},{"type":"text","text":" "},{"type":"text","text":"of the outputs."}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol","title":"Parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","type":"topic","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/CountingRange":{"navigatorTitle":[{"text":"CountingRange","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/parsing\/countingrange","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CountingRange","title":"CountingRange","abstract":[],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CountingRange","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(_:into:_:element:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:_:element:)","abstract":[{"type":"text","text":"Initializes a parser that attempts to run the given parser many times, accumulating the"},{"type":"text","text":" "},{"type":"text","text":"outputs into a result."}],"kind":"symbol","url":"\/documentation\/parsing\/many\/init(_:into:_:element:)","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","title":"init(_:into:_:element:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Separator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Terminator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Printability","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Never","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic"}}}