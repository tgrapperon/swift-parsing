{"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional\/print(_:into:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"output"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"First"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":" "},{"kind":"internalParam","text":"input"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"First"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Parameters","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"output: A well-structured value to be printed to the given input.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"input: A nebulous, mutable piece of data to be incrementally printed into.","type":"text"}]}]}],"type":"unorderedList"}]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parsers\/conditional\/print(_:into:)"]}],"metadata":{"externalID":"s:7Parsing7ParsersO11ConditionalOA2A13ParserPrinterRzAaFR_rlE5print_4intoy6OutputQz_5InputQzztKF","modules":[{"name":"Parsing"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"First","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ParserPrinter","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Second","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ParserPrinter"},{"text":", ","type":"text"},{"type":"codeVoice","code":"First.Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Second.Input"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"First.Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Second.Output"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"extendedModule":"Parsing","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"First","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"First","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"role":"symbol","roleHeading":"Instance Method","title":"print(_:into:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional\/ParserPrinter-Implementations"]]},"abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data into something more nebulous."}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Conditional/ParserPrinter-Implementations":{"url":"\/documentation\/parsing\/parsers\/conditional\/parserprinter-implementations","title":"ParserPrinter Implementations","role":"collectionGroup","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional\/ParserPrinter-Implementations","kind":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"url":"\/documentation\/parsing\/parsers","type":"topic","kind":"symbol","title":"Parsers","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Conditional/print(_:into:)":{"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"First","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"First","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"First","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ParserPrinter","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Second","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ParserPrinter","type":"codeVoice"},{"text":", ","type":"text"},{"code":"First.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Second.Input","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"First.Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Second.Output","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data into something more nebulous."}],"role":"symbol","url":"\/documentation\/parsing\/parsers\/conditional\/print(_:into:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional\/print(_:into:)","title":"print(_:into:)"},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","type":"topic","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Conditional":{"role":"symbol","kind":"symbol","title":"Parsers.Conditional","abstract":[{"type":"text","text":"A parser that can parse output from two types of parsers."}],"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conditional"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional","url":"\/documentation\/parsing\/parsers\/conditional","navigatorTitle":[{"kind":"identifier","text":"Conditional"}]}}}