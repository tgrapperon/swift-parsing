{"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/conversion\/data-swift.property-m5u1"]}],"abstract":[{"text":"Transforms this conversion to ","type":"text"},{"type":"codeVoice","code":"ArraySlice<UInt8>"},{"text":" into a conversion to ","type":"text"},{"type":"codeVoice","code":"Data"},{"text":".","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Map","text":"Map","preciseIdentifier":"s:7Parsing11ConversionsO3MapV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Conversions","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"text":"BytesToData","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData","preciseIdentifier":"s:7Parsing11ConversionsO11BytesToDataV"},{"text":"<","kind":"text"},{"text":"ArraySlice","kind":"typeIdentifier","preciseIdentifier":"s:s10ArraySliceV"},{"text":"<","kind":"text"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"text":">>> { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"A fluent version of ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/data-swift.type.property-7g9sj","isActive":true,"type":"reference"},{"text":".","type":"text"}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/data-swift.property-m5u1","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"metadata":{"externalID":"s:7Parsing10ConversionPAAs10ArraySliceVys5UInt8VG6OutputRtzrlE4dataAA11ConversionsO3MapVy_xAM11BytesToDataVy_AHGGvp","extendedModule":"Parsing","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Output","type":"codeVoice"},{"type":"text","text":" is "},{"code":"ArraySlice<UInt8>","type":"codeVoice"},{"type":"text","text":"."}]},"roleHeading":"Instance Property","title":"data","modules":[{"name":"Parsing"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"data","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Map","preciseIdentifier":"s:7Parsing11ConversionsO3MapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"BytesToData","preciseIdentifier":"s:7Parsing11ConversionsO11BytesToDataV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ArraySlice","preciseIdentifier":"s:s10ArraySliceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":">>>"}],"symbolKind":"property"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/data-swift.property-m5u1":{"url":"\/documentation\/parsing\/conversion\/data-swift.property-m5u1","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO3MapV","text":"Map"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO11BytesToDataV","text":"BytesToData","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s10ArraySliceV","text":"ArraySlice","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","text":"UInt8","kind":"typeIdentifier"},{"text":">>>","kind":"text"}],"role":"symbol","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"ArraySlice<UInt8>"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"data","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/data-swift.property-m5u1","abstract":[{"type":"text","text":"Transforms this conversion to "},{"code":"ArraySlice<UInt8>","type":"codeVoice"},{"type":"text","text":" into a conversion to "},{"code":"Data","type":"codeVoice"},{"type":"text","text":"."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion":{"url":"\/documentation\/parsing\/conversion","type":"topic","kind":"symbol","title":"Conversion","navigatorTitle":[{"kind":"identifier","text":"Conversion"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conversion"}],"abstract":[{"text":"Declares a type that can transform an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value ","type":"text"},{"inlineContent":[{"type":"text","text":"and"}],"type":"emphasis"},{"text":" transform an","type":"text"},{"text":" ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value back into an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/BytesToData":{"role":"symbol","abstract":[{"text":"A conversion from a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrependableCollection"},{"text":" of UTF-8 bytes to ","type":"text"},{"type":"codeVoice","code":"Data"},{"text":".","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"BytesToData","kind":"identifier"}],"url":"\/documentation\/parsing\/conversions\/bytestodata","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BytesToData","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData","title":"Conversions.BytesToData"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conversions"}],"url":"\/documentation\/parsing\/conversions","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A namespace for types that serve as conversions."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","type":"topic","title":"Conversions","navigatorTitle":[{"kind":"identifier","text":"Conversions"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrependableCollection":{"role":"symbol","abstract":[{"text":"A collection that supports empty initialization and the ability to prepend a sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements of elements to itself.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"PrependableCollection","kind":"identifier"}],"url":"\/documentation\/parsing\/prependablecollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrependableCollection","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrependableCollection","title":"PrependableCollection"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Map":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Map"}],"url":"\/documentation\/parsing\/conversions\/map","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A conversion that composes two conversions together by composing their"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/apply(_:)","isActive":true},{"type":"text","text":" functions and "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/unapply(_:)","isActive":true},{"type":"text","text":" functions together."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Map","type":"topic","title":"Conversions.Map","navigatorTitle":[{"kind":"identifier","text":"Map"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/data-swift.type.property-7g9sj":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A conversion from "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":" to "},{"type":"codeVoice","code":"Data"},{"type":"text","text":"."}],"url":"\/documentation\/parsing\/conversion\/data-swift.type.property-7g9sj","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"data"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO11BytesToDataV","text":"BytesToData","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Ss8UTF8ViewV","text":"UTF8View","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Conversions.BytesToData<Substring.UTF8View>","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"data","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/data-swift.type.property-7g9sj"},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","type":"topic","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/apply(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/apply(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"apply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"required":true,"type":"topic","title":"apply(_:)","url":"\/documentation\/parsing\/conversion\/apply(_:)","kind":"symbol","abstract":[{"type":"text","text":"Attempts to transform an input into an output."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/unapply(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/unapply(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unapply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"required":true,"type":"topic","title":"unapply(_:)","url":"\/documentation\/parsing\/conversion\/unapply(_:)","kind":"symbol","abstract":[{"type":"text","text":"Attempts to transform an output back into an input."}]}}}