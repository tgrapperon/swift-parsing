{"abstract":[{"type":"text","text":"Creates a parser-printer that wraps the given closures in its "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"codeVoice","code":"print(_:to:)"},{"type":"text","text":" methods."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/init(parse:print:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/anyparserprinter\/init(parse:print:)"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter"]]},"metadata":{"externalID":"s:7Parsing16AnyParserPrinterV5parse5printACyxq_Gq_xzKc_yq__xztKctcfc","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"parse"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"externalParam","text":"print"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"roleHeading":"Initializer","symbolKind":"init","modules":[{"name":"Parsing"}],"title":"init(parse:print:)","role":"symbol"},"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"parse","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"print","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"parse","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that attempts to parse an output from an input. ","type":"text"},{"type":"codeVoice","code":"parse"},{"text":" is executed each","type":"text"},{"text":" ","type":"text"},{"text":"time the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)"},{"text":" method is called on the resulting parser-printer.","type":"text"}]}]},{"name":"print","content":[{"inlineContent":[{"text":"A closure that attempts to print an output into an input. ","type":"text"},{"type":"codeVoice","code":"print"},{"text":" is executed each","type":"text"},{"text":" ","type":"text"},{"text":"time the ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/print(_:)","isActive":true},{"text":" method is called on the resulting parser-printer.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/parse(_:)":{"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)","type":"topic","url":"\/documentation\/parsing\/anyparserprinter\/parse(_:)","title":"parse(_:)","role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/init(parse:print:)":{"abstract":[{"type":"text","text":"Creates a parser-printer that wraps the given closures in its "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"codeVoice","code":"print(_:to:)"},{"type":"text","text":" methods."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"parse","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"externalParam","text":"print"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/init(parse:print:)","type":"topic","url":"\/documentation\/parsing\/anyparserprinter\/init(parse:print:)","title":"init(parse:print:)","role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","type":"topic","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyParserPrinter"}],"title":"AnyParserPrinter","type":"topic","url":"\/documentation\/parsing\/anyparserprinter","abstract":[{"type":"text","text":"A type-erased parser-printer of "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" from "},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParserPrinter"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/print(_:)":{"abstract":[{"text":"Attempts to print a well-structured piece of data to something more nebulous.","type":"text"}],"type":"topic","url":"\/documentation\/parsing\/anyparserprinter\/print(_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/print(_:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"_EmptyInitializable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"print(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}]}}}