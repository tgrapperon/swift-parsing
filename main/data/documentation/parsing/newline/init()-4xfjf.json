{"metadata":{"modules":[{"name":"Parsing"}],"externalID":"s:7Parsing7NewlineVA2A11ConversionsO19SubstringToUTF8ViewVRszrlEACyAGGycfc","roleHeading":"Initializer","symbolKind":"init","platforms":[],"role":"symbol","title":"init()","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"InputToBytes","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Conversions.SubstringToUTF8View"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"extendedModule":"Parsing","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Use 'Whitespace(1, .vertical)' instead","type":"text"}]}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"()"}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/newline\/init()-4xfjf"]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/init()-4xfjf","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol","title":"Parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Newline/init()-4xfjf":{"url":"\/documentation\/parsing\/newline\/init()-4xfjf","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"InputToBytes"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Conversions.SubstringToUTF8View"},{"text":".","type":"text"}]},"kind":"symbol","role":"symbol","deprecated":true,"title":"init()","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/init()-4xfjf","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","type":"topic","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Newline":{"kind":"symbol","url":"\/documentation\/parsing\/newline","abstract":[],"title":"Newline","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"}],"navigatorTitle":[{"text":"Newline","kind":"identifier"}],"role":"symbol","deprecated":true,"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline"}}}