{"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion"],"type":"conformsTo"}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser","interfaceLanguage":"swift"},"metadata":{"title":"Conversions.Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"extendedModule":"Parsing","modules":[{"name":"Parsing"}],"symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"externalID":"s:7Parsing11ConversionsO6ParserV","roleHeading":"Structure","role":"symbol"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/init(parser:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/parser"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/apply(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/unapply(_:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/Conversion-Implementations"]}],"variants":[{"paths":["\/documentation\/parsing\/conversions\/parser"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions"]]},"kind":"symbol","abstract":[{"type":"text","text":"A conversion from a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"},{"type":"text","text":"’s input to its output."}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Parser","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing13ParserPrinterP","text":"ParserPrinter","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing21PrependableCollectionP","text":"PrependableCollection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrependableCollection"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"You will not typically need to interact with this type directly. Instead you will usually use","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"Conversion\/parse(_:)-swift.type.method","type":"codeVoice"},{"text":" operation, which constructs this type.","type":"text"}]}],"kind":"content"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conversions"}],"url":"\/documentation\/parsing\/conversions","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A namespace for types that serve as conversions."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","type":"topic","title":"Conversions","navigatorTitle":[{"kind":"identifier","text":"Conversions"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion":{"url":"\/documentation\/parsing\/conversion","type":"topic","kind":"symbol","title":"Conversion","navigatorTitle":[{"kind":"identifier","text":"Conversion"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conversion"}],"abstract":[{"text":"Declares a type that can transform an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value ","type":"text"},{"inlineContent":[{"type":"text","text":"and"}],"type":"emphasis"},{"text":" transform an","type":"text"},{"text":" ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value back into an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Parser/unapply(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/unapply(_:)","title":"unapply(_:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unapply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"url":"\/documentation\/parsing\/conversions\/parser\/unapply(_:)","abstract":[{"type":"text","text":"Attempts to transform an output back into an input."}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Parser/Conversion-Implementations":{"type":"topic","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/Conversion-Implementations","url":"\/documentation\/parsing\/conversions\/parser\/conversion-implementations","kind":"article","abstract":[],"title":"Conversion Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"type":"topic","title":"ParserPrinter","url":"\/documentation\/parsing\/parserprinter","kind":"symbol","abstract":[{"type":"text","text":"A "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","isActive":true},{"type":"text","text":" that can incrementally “print” an output value back into an input."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Parser":{"type":"topic","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser","url":"\/documentation\/parsing\/conversions\/parser","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"abstract":[{"text":"A conversion from a ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","type":"reference","isActive":true},{"text":"’s input to its output.","type":"text"}],"title":"Conversions.Parser"},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","type":"topic","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrependableCollection":{"role":"symbol","abstract":[{"text":"A collection that supports empty initialization and the ability to prepend a sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements of elements to itself.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"PrependableCollection","kind":"identifier"}],"url":"\/documentation\/parsing\/prependablecollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrependableCollection","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrependableCollection","title":"PrependableCollection"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol","title":"Parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Parser/parser":{"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/parser","abstract":[],"url":"\/documentation\/parsing\/conversions\/parser\/parser","title":"parser","kind":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"parser"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Upstream"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Parser/init(parser:)":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/init(parser:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"parser"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":")"}],"type":"topic","title":"init(parser:)","kind":"symbol","url":"\/documentation\/parsing\/conversions\/parser\/init(parser:)","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Parser/apply(_:)":{"abstract":[{"text":"Attempts to transform an input into an output.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"apply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"text":"Output","kind":"typeIdentifier"}],"title":"apply(_:)","url":"\/documentation\/parsing\/conversions\/parser\/apply(_:)","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/apply(_:)","role":"symbol"}}}