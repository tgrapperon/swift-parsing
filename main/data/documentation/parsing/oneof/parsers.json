{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/oneof\/parsers"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOf"]]},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOf\/parsers","interfaceLanguage":"swift"},"metadata":{"role":"symbol","modules":[{"name":"Parsing"}],"symbolKind":"property","externalID":"s:7Parsing5OneOfV7parsersxvp","roleHeading":"Instance Property","title":"parsers","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parsers","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier"}]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parsers","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier"}]}],"kind":"declarations"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/OneOf/parsers":{"title":"parsers","abstract":[],"url":"\/documentation\/parsing\/oneof\/parsers","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"parsers","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOf\/parsers","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/OneOf":{"abstract":[{"text":"A parser that attempts to run a number of parsers till one succeeds.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOf","title":"OneOf","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOf","kind":"identifier"}],"url":"\/documentation\/parsing\/oneof","type":"topic","role":"symbol","navigatorTitle":[{"text":"OneOf","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","type":"topic","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol","title":"Parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]}}}