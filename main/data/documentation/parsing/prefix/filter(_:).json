{"metadata":{"role":"symbol","title":"filter(_:)","roleHeading":"Instance Method","externalID":"s:7Parsing6ParserPAAE6filteryAA7ParsersO6FilterVy_xGSb6OutputQzcF::SYNTHESIZED::s:7Parsing6PrefixV","extendedModule":"Parsing","modules":[{"name":"Parsing"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"filter","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Filter","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO6FilterV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"symbolKind":"method"},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Returns a parser that filters output from this parser when its output does not satisfy the"},{"type":"text","text":" "},{"type":"text","text":"given predicate."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"filter"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"text":" (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"},{"text":".","kind":"text"},{"text":"Filter","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO6FilterV","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A parser that filters its output.","type":"text"}]}],"kind":"content"},{"parameters":[{"name":"predicate","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes an output from this parser and returns a Boolean"},{"type":"text","text":" "},{"type":"text","text":"value indicating whether the output should be returned."}]}]}],"kind":"parameters"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This method is similar to "},{"type":"codeVoice","code":"Sequence.filter"},{"type":"text","text":" in the Swift standard library, as well as"},{"type":"text","text":" "},{"type":"codeVoice","code":"Publisher.filter"},{"type":"text","text":" in the Combine framework."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This parser fails if the predicate is not satisfied on the output of the upstream parser. For example,"},{"type":"text","text":" "},{"type":"text","text":"the following parser consumes only even integers and so fails when an odd integer is used:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["var input = \"43 Hello, world!\"[...]","let number = try Int.parser().filter { $0.isMultiple(of: 2) }.parse(&input)","\/\/ error: processed value 43 failed to satisfy predicate","\/\/  --> input:1:1-2","\/\/ 1 | 43 Hello, world!","\/\/   | ^^ processed input"]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/filter(_:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/Parser-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/prefix\/filter(_:)"]}],"sections":[],"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","type":"topic","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}],"url":"\/documentation\/parsing\/prefix","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","type":"topic","title":"Prefix","navigatorTitle":[{"kind":"identifier","text":"Prefix"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol","title":"Parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"url":"\/documentation\/parsing\/parsers","type":"topic","kind":"symbol","title":"Parsers","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/Parser-Implementations","role":"collectionGroup","url":"\/documentation\/parsing\/prefix\/parser-implementations","type":"topic","abstract":[],"title":"Parser Implementations","kind":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Filter":{"url":"\/documentation\/parsing\/parsers\/filter","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Filter"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Filter"}],"title":"Parsers.Filter","kind":"symbol","abstract":[{"type":"text","text":"A parser that filters the output of an upstream parser when it does not satisfy a predicate."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/filter(_:)":{"role":"symbol","abstract":[{"text":"Returns a parser that filters output from this parser when its output does not satisfy the","type":"text"},{"text":" ","type":"text"},{"text":"given predicate.","type":"text"}],"url":"\/documentation\/parsing\/prefix\/filter(_:)","title":"filter(_:)","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/filter(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"filter","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Filter","preciseIdentifier":"s:7Parsing7ParsersO6FilterV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"kind":"symbol"}}}