{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO"},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parserbuilder\/zipoovoo"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZipOOVOO"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P0"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P4"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P1"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P2"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P3"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P4"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"P1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"P2"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P2"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"P3"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P2"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P3"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"P4"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"languages":["swift"],"platforms":["Linux"]}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder"]]},"sections":[],"metadata":{"extendedModule":"Parsing","modules":[{"name":"Parsing"}],"navigatorTitle":[{"text":"ZipOOVOO","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipOOVOO","kind":"identifier"}],"title":"ParserBuilder.ZipOOVOO","symbolKind":"struct","externalID":"s:7Parsing13ParserBuilderO8ZipOOVOOV","role":"symbol","roleHeading":"Structure"},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO\/init(_:_:_:_:_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO\/p0","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO\/p1","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO\/p2","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO\/p3","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO\/p4"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO\/Parser-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO\/ParserPrinter-Implementations"],"generated":true,"title":"Default Implementations"}],"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOOVOO/init(_:_:_:_:_:)":{"url":"\/documentation\/parsing\/parserbuilder\/zipoovoo\/init(_:_:_:_:_:)","title":"init(_:_:_:_:_:)","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO\/init(_:_:_:_:_:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P3"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P4"},{"kind":"text","text":")"}],"type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOOVOO/p0":{"title":"p0","kind":"symbol","type":"topic","role":"symbol","abstract":[],"url":"\/documentation\/parsing\/parserbuilder\/zipoovoo\/p0","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"p0"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P0"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO\/p0"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOOVOO/p1":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO\/p1","type":"topic","title":"p1","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"p1","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"P1"}],"kind":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipoovoo\/p1","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOOVOO/p4":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"p4","kind":"identifier"},{"text":": ","kind":"text"},{"text":"P4","kind":"typeIdentifier"}],"title":"p4","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO\/p4","url":"\/documentation\/parsing\/parserbuilder\/zipoovoo\/p4","abstract":[],"type":"topic","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOOVOO/Parser-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO\/Parser-Implementations","abstract":[],"type":"topic","url":"\/documentation\/parsing\/parserbuilder\/zipoovoo\/parser-implementations","kind":"article","title":"Parser Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOOVOO/ParserPrinter-Implementations":{"title":"ParserPrinter Implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO\/ParserPrinter-Implementations","url":"\/documentation\/parsing\/parserbuilder\/zipoovoo\/parserprinter-implementations","abstract":[],"type":"topic","kind":"article"},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","type":"topic","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOOVOO/p2":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO\/p2","url":"\/documentation\/parsing\/parserbuilder\/zipoovoo\/p2","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"p2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P2"}],"role":"symbol","title":"p2","abstract":[],"kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"url":"\/documentation\/parsing\/parse","title":"Parse","role":"symbol","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers to accumulate their outputs."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parse"}],"navigatorTitle":[{"kind":"identifier","text":"Parse"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOOVOO":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO","navigatorTitle":[{"kind":"identifier","text":"ZipOOVOO"}],"abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZipOOVOO"}],"type":"topic","url":"\/documentation\/parsing\/parserbuilder\/zipoovoo","kind":"symbol","title":"ParserBuilder.ZipOOVOO"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOOVOO/parse(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO\/parse(_:)","url":"\/documentation\/parsing\/parserbuilder\/zipoovoo\/parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> (","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P3","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P4","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"role":"symbol","title":"parse(_:)","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"title":"ParserPrinter","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"abstract":[{"text":"A ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"reference"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"url":"\/documentation\/parsing\/parserprinter","conformance":{"constraints":[{"type":"codeVoice","code":"P0"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P1"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P2"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P3"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P4"},{"type":"text","text":" conforms to "},{"code":"ParserPrinter","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P0.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"P1.Input","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P1.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"P2.Input","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P2.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"P3.Input","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P2.Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"P3.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"P4.Input","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOOVOO/p3":{"url":"\/documentation\/parsing\/parserbuilder\/zipoovoo\/p3","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO\/p3","role":"symbol","kind":"symbol","title":"p3","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"p3","kind":"identifier"},{"text":": ","kind":"text"},{"text":"P3","kind":"typeIdentifier"}],"abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol","title":"Parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"role":"symbol","title":"ParserBuilder","abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs a number of parsers, one after the other, and accumulates their outputs."}],"kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parserbuilder","navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder"}}}